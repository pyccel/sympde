Domain(dim=2)              :: Omega
FunctionSpace(Omega)       :: V
VectorFunctionSpace(Omega) :: W
Field(V)                   :: phi
Real                       :: alpha
#Expression                 :: f

l1(v::V) = < v >
l2(v::V) = < dx(v) >
l3(v::V) = < dx(dx(v)) >
l4(v::V) = < 2*pi**2*sin(pi*x)*sin(pi*y) * v >
l5(v::V) = < exp(-phi) * v >

a1(v::V, u::V) = < v * u >
a2(v::V, u::V) = < laplace(v) * laplace(u) >
a3(v::V, u::V) = < dot(grad(v), grad(u)) >
a4(v::V, u::V) = a2(v,u) + a3(v,u)

X = V*V
a5((v1,v2)::X, (u1,u2)::X) = a2(v1,u1) + a3(v2,u2) + a1(v1,u2)

m1(v::W, u::W) = < rot(v)*rot(u) + div(v)*div(u) >
m2(v::W, u::W) = < inner(grad(v), grad(u)) >

find u :: V such that 
  a1(v,u) = l1(v) forall v :: V 
  and u = 0 on 'Gamma_1' 
  and dot(grad(u), nn) = 0 on 'Gamma_2' 
  label: 'poisson'


a11(v::W, u::W) = < inner(grad(v), grad(u)) >
a12(v::W, p::V) = < div(v)*p >

U = W*V
a13((v,q)::U, (u,p)::U) = a11(v,u) - a12(v,p) + a12(u,q)


#find u,p :: U such that 
#  a13((v,q), (u,p)) = l6(v) forall (v,q) :: U
#  and u = 0 on 'Gamma_1' 
#  and dot(grad(u), nn) = 0 on 'Gamma_2' 
#  label: 'stokes'
